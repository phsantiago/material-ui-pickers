{"version":3,"file":"usePickerState-c86d9d51.js","sources":["../src/_helpers/utils.ts","../src/_shared/hooks/useOpenState.ts","../src/_shared/hooks/usePickerState.ts"],"sourcesContent":["import * as React from 'react';\n\n/* Use it instead of .includes method for IE support */\nexport function arrayIncludes<T>(array: T[] | readonly T[], itemOrItems: T | T[]) {\n  if (Array.isArray(itemOrItems)) {\n    return itemOrItems.every(item => array.indexOf(item) !== -1);\n  }\n\n  return array.indexOf(itemOrItems) !== -1;\n}\n\nexport const onSpaceOrEnter = (\n  innerFn: () => void,\n  onFocus?: (e: React.KeyboardEvent<any>) => void\n) => (e: React.KeyboardEvent) => {\n  if (e.key === 'Enter' || e.key === ' ') {\n    innerFn();\n\n    // prevent any side effects\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  if (onFocus) {\n    onFocus(e);\n  }\n};\n\n/* Quick untyped helper to improve function composition readability */\nexport const pipe = (...fns: ((...args: any[]) => any)[]) =>\n  fns.reduceRight(\n    (prevFn, nextFn) => (...args) => nextFn(prevFn(...args)),\n    value => value\n  );\n\nexport const executeInTheNextEventLoopTick = (fn: () => void) => {\n  setTimeout(fn, 0);\n};\n\nexport function createDelegatedEventHandler<TEvent>(\n  fn: (event: TEvent) => void,\n  onEvent?: (event: TEvent) => void\n) {\n  return (event: TEvent) => {\n    fn(event);\n\n    if (onEvent) {\n      onEvent(event);\n    }\n  };\n}\n\nexport function mergeRefs<T>(refs: (React.Ref<T | null> | undefined)[]) {\n  return (value: T) => {\n    refs.forEach(ref => {\n      if (typeof ref === 'function') {\n        ref(value);\n      } else if (typeof ref === 'object' && ref != null) {\n        // @ts-ignore .current is not a readonly, hold on ts\n        ref.current = value;\n      }\n    });\n  };\n}\n","import * as React from 'react';\nimport { BasePickerProps } from '../../typings/BasePicker';\n\nexport function useOpenState({ open, onOpen, onClose }: BasePickerProps<any, any>) {\n  const isControllingOpenProp = React.useRef(typeof open === 'boolean').current;\n  const [_open, _setIsOpen] = React.useState(false);\n\n  // It is required to update inner state in useEffect in order to avoid situation when\n  // Our component is not mounted yet, but `open` state is set to `true` (e.g. initially opened)\n  React.useEffect(() => {\n    if (isControllingOpenProp) {\n      if (typeof open !== 'boolean') {\n        throw new Error('You must not mix controlling and uncontrolled mode for `open` prop');\n      }\n\n      _setIsOpen(open);\n    }\n  }, [isControllingOpenProp, open]);\n\n  const setIsOpen = React.useCallback(\n    (newIsOpen: boolean) => {\n      if (!isControllingOpenProp) {\n        _setIsOpen(newIsOpen);\n      }\n\n      return newIsOpen ? onOpen && onOpen() : onClose && onClose();\n    },\n    [isControllingOpenProp, onOpen, onClose]\n  );\n\n  return { isOpen: _open, setIsOpen };\n}\n","import * as React from 'react';\nimport { useOpenState } from './useOpenState';\nimport { WrapperVariant } from '../../wrappers/Wrapper';\nimport { BasePickerProps } from '../../typings/BasePicker';\nimport { useUtils, useNow, MuiPickersAdapter } from './useUtils';\n\nexport const FORCE_FINISH_PICKER = Symbol('Force closing picker, useful for accessibility');\n\nexport interface PickerStateValueManager<TInput, TDateValue> {\n  parseInput: (utils: MuiPickersAdapter, props: BasePickerProps<TInput, TDateValue>) => TDateValue;\n  emptyValue: TDateValue;\n  areValuesEqual: (\n    utils: MuiPickersAdapter,\n    valueLeft: TDateValue,\n    valueRight: TDateValue\n  ) => boolean;\n}\n\nexport function usePickerState<TInput, TDateValue>(\n  props: BasePickerProps<TInput, TDateValue>,\n  valueManager: PickerStateValueManager<TInput, TDateValue>\n) {\n  const { autoOk, inputFormat, disabled, readOnly, onAccept, onChange, value } = props;\n\n  if (!inputFormat) {\n    throw new Error('inputFormat prop is required');\n  }\n\n  const now = useNow();\n  const utils = useUtils();\n  const { isOpen, setIsOpen } = useOpenState(props);\n  const [pickerDate, setPickerDate] = React.useState(valueManager.parseInput(utils, props));\n\n  // Mobile keyboard view is a special case.\n  // When it's open picker should work like closed, cause we are just showing text field\n  const [isMobileKeyboardViewOpen, setMobileKeyboardViewOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    const parsedDateValue = valueManager.parseInput(utils, props);\n    setPickerDate(currentPickerDate => {\n      if (!valueManager.areValuesEqual(utils, currentPickerDate, parsedDateValue)) {\n        return parsedDateValue;\n      }\n\n      return currentPickerDate;\n    });\n    // We need to react only on value change, because `date` could potentially return new Date() on each render\n  }, [value, utils]); // eslint-disable-line\n\n  const acceptDate = React.useCallback(\n    (acceptedDate: TDateValue, needClosePicker: boolean) => {\n      onChange(acceptedDate);\n\n      if (needClosePicker) {\n        setIsOpen(false);\n\n        if (onAccept) {\n          onAccept(acceptedDate);\n        }\n      }\n    },\n    [onAccept, onChange, setIsOpen]\n  );\n\n  const wrapperProps = React.useMemo(\n    () => ({\n      open: isOpen,\n      onClear: () => acceptDate(valueManager.emptyValue, true),\n      onAccept: () => acceptDate(pickerDate, true),\n      onDismiss: () => setIsOpen(false),\n      onSetToday: () => {\n        // TODO FIX ME\n        setPickerDate(now as any);\n        acceptDate(now as any, Boolean(autoOk));\n      },\n    }),\n    [acceptDate, autoOk, isOpen, now, pickerDate, setIsOpen, valueManager.emptyValue]\n  );\n\n  const pickerProps = React.useMemo(\n    () => ({\n      date: pickerDate,\n      isMobileKeyboardViewOpen,\n      toggleMobileKeyboardView: () => {\n        if (!isMobileKeyboardViewOpen) {\n          // accept any partial input done by React.user\n          setPickerDate(pickerDate);\n        }\n\n        setMobileKeyboardViewOpen(!isMobileKeyboardViewOpen);\n      },\n      onDateChange: (\n        newDate: TDateValue,\n        currentVariant: WrapperVariant,\n        isFinish: boolean | symbol = true\n      ) => {\n        setPickerDate(newDate);\n        const isFinishing =\n          typeof isFinish === 'boolean' ? isFinish : isFinish === FORCE_FINISH_PICKER;\n\n        if (isFinishing) {\n          const autoAcceptRequested = Boolean(autoOk) || isFinish === FORCE_FINISH_PICKER;\n          if (currentVariant === 'mobile' && autoAcceptRequested) {\n            acceptDate(newDate, true);\n          }\n\n          if (currentVariant !== 'mobile') {\n            acceptDate(newDate, autoAcceptRequested);\n          }\n        }\n      },\n    }),\n    [acceptDate, autoOk, isMobileKeyboardViewOpen, pickerDate]\n  );\n\n  const inputProps = React.useMemo(\n    () => ({\n      onChange,\n      inputFormat,\n      open: isOpen,\n      rawValue: value,\n      openPicker: () => !readOnly && !disabled && setIsOpen(true),\n    }),\n    [onChange, inputFormat, isOpen, value, readOnly, disabled, setIsOpen]\n  );\n\n  const pickerState = { pickerProps, inputProps, wrapperProps };\n  React.useDebugValue(pickerState, () => ({\n    MuiPickerState: {\n      pickerDate,\n      other: pickerState,\n    },\n  }));\n\n  return pickerState;\n}\n"],"names":["arrayIncludes","array","itemOrItems","Array","isArray","every","item","indexOf","onSpaceOrEnter","innerFn","onFocus","e","key","preventDefault","stopPropagation","pipe","fns","reduceRight","prevFn","nextFn","value","executeInTheNextEventLoopTick","fn","setTimeout","createDelegatedEventHandler","onEvent","event","mergeRefs","refs","forEach","ref","current","useOpenState","open","onOpen","onClose","isControllingOpenProp","React","_open","_setIsOpen","Error","setIsOpen","newIsOpen","isOpen","FORCE_FINISH_PICKER","Symbol","usePickerState","props","valueManager","autoOk","inputFormat","disabled","readOnly","onAccept","onChange","now","useNow","utils","useUtils","parseInput","pickerDate","setPickerDate","isMobileKeyboardViewOpen","setMobileKeyboardViewOpen","parsedDateValue","currentPickerDate","areValuesEqual","acceptDate","acceptedDate","needClosePicker","wrapperProps","onClear","emptyValue","onDismiss","onSetToday","Boolean","pickerProps","date","toggleMobileKeyboardView","onDateChange","newDate","currentVariant","isFinish","isFinishing","autoAcceptRequested","inputProps","rawValue","openPicker","pickerState","MuiPickerState","other"],"mappings":"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"}