{"version":3,"file":"TimePicker-a3d92719.js","sources":["../src/_shared/icons/ClockIcon.tsx","../src/TimePicker/TimePicker.tsx"],"sourcesContent":["import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n\n/**\n * @ignore - internal component.\n */\nexport default createSvgIcon(\n  <React.Fragment>\n    <path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\" />\n    <path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\" />\n  </React.Fragment>,\n  'Clock'\n);\n","import React from 'react';\nimport ClockIcon from '../_shared/icons/ClockIcon';\nimport { ParsableDate } from '../constants/prop-types';\nimport { TimePickerToolbar } from './TimePickerToolbar';\nimport { ExportedClockViewProps } from '../views/Clock/ClockView';\nimport { ResponsiveWrapper } from '../wrappers/ResponsiveWrapper';\nimport { pick12hOr24hFormat } from '../_helpers/text-field-helper';\nimport { useParsedDate } from '../_shared/hooks/date-helpers-hooks';\nimport { useUtils, MuiPickersAdapter } from '../_shared/hooks/useUtils';\nimport { validateTime, TimeValidationError } from '../_helpers/time-utils';\nimport { makePickerWithStateAndWrapper } from '../Picker/makePickerWithState';\nimport { MobileWrapper, DesktopWrapper, StaticWrapper } from '../wrappers/Wrapper';\nimport { WithViewsProps, AllSharedPickerProps } from '../Picker/SharedPickerProps';\nimport { ValidationProps, makeValidationHook } from '../_shared/hooks/useValidation';\n\nexport interface BaseTimePickerProps\n  extends ExportedClockViewProps,\n    ValidationProps<TimeValidationError, ParsableDate>,\n    WithViewsProps<'hours' | 'minutes' | 'seconds'> {}\n\nexport function getTextFieldAriaText(value: ParsableDate, utils: MuiPickersAdapter) {\n  return value && utils.isValid(utils.date(value))\n    ? `Choose time, selected time is ${utils.format(utils.date(value), 'fullTime')}`\n    : 'Choose time';\n}\n\nfunction useInterceptProps({\n  ampm,\n  mask,\n  inputFormat,\n  minTime: __minTime,\n  maxTime: __maxTime,\n  openTo = 'hours',\n  views = ['hours', 'minutes'],\n  ...other\n}: BaseTimePickerProps & AllSharedPickerProps) {\n  const utils = useUtils();\n\n  const minTime = useParsedDate(__minTime);\n  const maxTime = useParsedDate(__maxTime);\n  const willUseAmPm = ampm ?? utils.is12HourCycleInCurrentLocale();\n\n  return {\n    views,\n    openTo,\n    minTime,\n    maxTime,\n    ampm: willUseAmPm,\n    acceptRegex: willUseAmPm ? /[\\dapAP]/gi : /\\d/gi,\n    mask: mask || (willUseAmPm ? '__:__ _M' : '__:__'),\n    getOpenDialogAriaText: getTextFieldAriaText,\n    openPickerIcon: <ClockIcon />,\n    inputFormat: pick12hOr24hFormat(inputFormat, ampm, {\n      localized: utils.formats.fullTime,\n      '12h': utils.formats.fullTime12h,\n      '24h': utils.formats.fullTime24h,\n    }),\n    ...other,\n  };\n}\n\nconst timePickerConfig = {\n  useInterceptProps,\n  useValidation: makeValidationHook<TimeValidationError, ParsableDate, BaseTimePickerProps>(\n    validateTime\n  ),\n  DefaultToolbarComponent: TimePickerToolbar,\n};\n\nexport const TimePicker = makePickerWithStateAndWrapper<BaseTimePickerProps>(ResponsiveWrapper, {\n  name: 'MuiPickersTimePicker',\n  ...timePickerConfig,\n});\n\nexport type TimePickerProps = React.ComponentProps<typeof TimePicker>;\n\nexport const DesktopTimePicker = makePickerWithStateAndWrapper<BaseTimePickerProps>(\n  DesktopWrapper,\n  {\n    name: 'MuiPickersDesktopTimePicker',\n    ...timePickerConfig,\n  }\n);\n\nexport type DesktopTimePickerProps = React.ComponentProps<typeof DesktopTimePicker>;\n\nexport const MobileTimePicker = makePickerWithStateAndWrapper<BaseTimePickerProps>(MobileWrapper, {\n  name: 'MuiPickersMobileTimePicker',\n  ...timePickerConfig,\n});\n\nexport type MobileTimePickerProps = React.ComponentProps<typeof MobileTimePicker>;\n\nexport const StaticTimePicker = makePickerWithStateAndWrapper<BaseTimePickerProps>(StaticWrapper, {\n  name: 'MuiPickersStaticTimePicker',\n  ...timePickerConfig,\n});\n\nexport type StaticTimePickerProps = React.ComponentProps<typeof StaticTimePicker>;\n"],"names":["createSvgIcon","React.createElement","React.Fragment","getTextFieldAriaText","value","utils","isValid","date","format","useInterceptProps","ampm","mask","inputFormat","__minTime","minTime","__maxTime","maxTime","openTo","views","other","useUtils","useParsedDate","willUseAmPm","is12HourCycleInCurrentLocale","acceptRegex","getOpenDialogAriaText","openPickerIcon","React","pick12hOr24hFormat","localized","formats","fullTime","fullTime12h","fullTime24h","timePickerConfig","useValidation","makeValidationHook","validateTime","DefaultToolbarComponent","TimePickerToolbar","TimePicker","makePickerWithStateAndWrapper","ResponsiveWrapper","name","DesktopTimePicker","DesktopWrapper","MobileTimePicker","MobileWrapper","StaticTimePicker","StaticWrapper"],"mappings":";;;;;;;;;;AAGA;;;;AAGA,gBAAeA,aAAa,eAC1BC,cAACC,QAAD,qBACED;AAAM,EAAA,CAAC,EAAC;AAAR,EADF,eAEEA;AAAM,EAAA,CAAC,EAAC;AAAR,EAFF,CAD0B,EAK1B,OAL0B,CAA5B;;;;;ACcO,SAASE,oBAAT,CAA8BC,KAA9B,EAAmDC,KAAnD,EAA6E;AAClF,SAAOD,KAAK,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,KAAX,CAAd,CAAT,2CAC8BC,KAAK,CAACG,MAAN,CAAaH,KAAK,CAACE,IAAN,CAAWH,KAAX,CAAb,EAAgC,UAAhC,CAD9B,IAEH,aAFJ;AAGD;;AAED,SAASK,iBAAT,OAS+C;AAAA,MAR7CC,IAQ6C,QAR7CA,IAQ6C;AAAA,MAP7CC,IAO6C,QAP7CA,IAO6C;AAAA,MAN7CC,WAM6C,QAN7CA,WAM6C;AAAA,MALpCC,SAKoC,QAL7CC,OAK6C;AAAA,MAJpCC,SAIoC,QAJ7CC,OAI6C;AAAA,yBAH7CC,MAG6C;AAAA,MAH7CA,MAG6C,4BAHpC,OAGoC;AAAA,wBAF7CC,KAE6C;AAAA,MAF7CA,KAE6C,2BAFrC,CAAC,OAAD,EAAU,SAAV,CAEqC;AAAA,MAD1CC,KAC0C;;AAC7C,MAAMd,KAAK,GAAGe,QAAQ,EAAtB;AAEA,MAAMN,OAAO,GAAGO,aAAa,CAACR,SAAD,CAA7B;AACA,MAAMG,OAAO,GAAGK,aAAa,CAACN,SAAD,CAA7B;AACA,MAAMO,WAAW,GAAGZ,IAAH,aAAGA,IAAH,cAAGA,IAAH,GAAWL,KAAK,CAACkB,4BAAN,EAA5B;AAEA;AACEL,IAAAA,KAAK,EAALA,KADF;AAEED,IAAAA,MAAM,EAANA,MAFF;AAGEH,IAAAA,OAAO,EAAPA,OAHF;AAIEE,IAAAA,OAAO,EAAPA,OAJF;AAKEN,IAAAA,IAAI,EAAEY,WALR;AAMEE,IAAAA,WAAW,EAAEF,WAAW,GAAG,YAAH,GAAkB,MAN5C;AAOEX,IAAAA,IAAI,EAAEA,IAAI,KAAKW,WAAW,GAAG,UAAH,GAAgB,OAAhC,CAPZ;AAQEG,IAAAA,qBAAqB,EAAEtB,oBARzB;AASEuB,IAAAA,cAAc,eAAEC,6BAAC,SAAD,OATlB;AAUEf,IAAAA,WAAW,EAAEgB,kBAAkB,CAAChB,WAAD,EAAcF,IAAd,EAAoB;AACjDmB,MAAAA,SAAS,EAAExB,KAAK,CAACyB,OAAN,CAAcC,QADwB;AAEjD,aAAO1B,KAAK,CAACyB,OAAN,CAAcE,WAF4B;AAGjD,aAAO3B,KAAK,CAACyB,OAAN,CAAcG;AAH4B,KAApB;AAVjC,KAeKd,KAfL;AAiBD;;AAED,IAAMe,gBAAgB,GAAG;AACvBzB,EAAAA,iBAAiB,EAAjBA,iBADuB;AAEvB0B,EAAAA,aAAa,EAAEC,kBAAkB,CAC/BC,YAD+B,CAFV;AAKvBC,EAAAA,uBAAuB,EAAEC;AALF,CAAzB;IAQaC,UAAU,GAAGC,6BAA6B,CAAsBC,iBAAtB;AACrDC,EAAAA,IAAI,EAAE;AAD+C,GAElDT,gBAFkD;IAO1CU,iBAAiB,GAAGH,6BAA6B,CAC5DI,cAD4D;AAG1DF,EAAAA,IAAI,EAAE;AAHoD,GAIvDT,gBAJuD;IAUjDY,gBAAgB,GAAGL,6BAA6B,CAAsBM,aAAtB;AAC3DJ,EAAAA,IAAI,EAAE;AADqD,GAExDT,gBAFwD;IAOhDc,gBAAgB,GAAGP,6BAA6B,CAAsBQ,aAAtB;AAC3DN,EAAAA,IAAI,EAAE;AADqD,GAExDT,gBAFwD;;;;"}