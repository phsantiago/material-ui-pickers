{"version":3,"file":"index.js","sources":["../src/DateRangePicker/date-range-manager.ts","../src/DateRangePicker/DateRangePickerToolbar.tsx","../src/DateRangePicker/DateRangePickerDay.tsx","../src/DateRangePicker/DateRangePickerViewMobile.tsx","../src/DateRangePicker/DateRangePickerInput.tsx","../src/DateRangePicker/DateRangePickerViewDesktop.tsx","../src/DateRangePicker/DateRangePickerView.tsx","../src/DateRangePicker/DateRangeDelimiter.tsx","../src/DateRangePicker/DateRangePicker.tsx"],"sourcesContent":["import { DateRange } from './DateRangePicker';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { MuiPickersAdapter } from '../_shared/hooks/useUtils';\n\ninterface CalculateRangeChangeOptions {\n  utils: MuiPickersAdapter;\n  range: DateRange;\n  newDate: MaterialUiPickersDate;\n  currentlySelectingRangeEnd: 'start' | 'end';\n}\n\nexport function calculateRangeChange({\n  utils,\n  range,\n  newDate: selectedDate,\n  currentlySelectingRangeEnd,\n}: CalculateRangeChangeOptions): { nextSelection: 'start' | 'end'; newRange: DateRange } {\n  const [start, end] = range;\n\n  if (currentlySelectingRangeEnd === 'start') {\n    return Boolean(end) && utils.isAfter(selectedDate, end)\n      ? { nextSelection: 'end', newRange: [selectedDate, null] }\n      : { nextSelection: 'end', newRange: [selectedDate, end] };\n  } else {\n    return Boolean(start) && utils.isBefore(selectedDate, start)\n      ? { nextSelection: 'end', newRange: [selectedDate, null] }\n      : { nextSelection: 'start', newRange: [start, selectedDate] };\n  }\n}\n\nexport function calculateRangePreview(options: CalculateRangeChangeOptions): DateRange {\n  if (!options.newDate) {\n    return [null, null];\n  }\n\n  const [start, end] = options.range;\n  const { newRange } = calculateRangeChange(options);\n\n  if (!start || !end) {\n    return newRange;\n  }\n\n  const [previewStart, previewEnd] = newRange;\n  // prettier-ignore\n  return options.currentlySelectingRangeEnd === 'end'\n    ? [end, previewEnd]\n    : [previewStart, start];\n}\n","import * as React from 'react';\nimport PickerToolbar from '../_shared/PickerToolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ToolbarComponentProps } from '../Picker/Picker';\nimport { ToolbarButton } from '../_shared/ToolbarButton';\nimport { withDefaultProps } from '../_shared/withDefaultProps';\nimport { DateRange, CurrentlySelectingRangeEndProps } from './RangeTypes';\n\nconst muiComponentConfig = { name: 'MuiPickersDateRangePickerToolbarProps' };\nexport const useStyles = makeStyles(\n  {\n    penIcon: {\n      position: 'relative',\n      top: 4,\n    },\n    dateTextContainer: {\n      display: 'flex',\n    },\n  },\n  muiComponentConfig\n);\n\ninterface DateRangePickerToolbarProps\n  extends CurrentlySelectingRangeEndProps,\n    Pick<\n      ToolbarComponentProps,\n      'isMobileKeyboardViewOpen' | 'toggleMobileKeyboardView' | 'toolbarTitle' | 'toolbarFormat'\n    > {\n  date: DateRange;\n  startText: React.ReactNode;\n  endText: React.ReactNode;\n  currentlySelectingRangeEnd: 'start' | 'end';\n  setCurrentlySelectingRangeEnd: (newSelectingEnd: 'start' | 'end') => void;\n}\n\nexport const DateRangePickerToolbar: React.FC<DateRangePickerToolbarProps> = withDefaultProps(\n  muiComponentConfig,\n  ({\n    date: [start, end],\n    toolbarFormat,\n    isMobileKeyboardViewOpen,\n    toggleMobileKeyboardView,\n    currentlySelectingRangeEnd,\n    setCurrentlySelectingRangeEnd,\n    startText,\n    endText,\n    toolbarTitle = 'SELECT DATE RANGE',\n  }) => {\n    const utils = useUtils();\n    const classes = useStyles();\n\n    const startDateValue = start\n      ? utils.formatByString(start, toolbarFormat || utils.formats.shortDate)\n      : startText;\n\n    const endDateValue = end\n      ? utils.formatByString(end, toolbarFormat || utils.formats.shortDate)\n      : endText;\n\n    return (\n      <PickerToolbar\n        toolbarTitle={toolbarTitle}\n        isMobileKeyboardViewOpen={isMobileKeyboardViewOpen}\n        toggleMobileKeyboardView={toggleMobileKeyboardView}\n        isLandscape={false}\n        penIconClassName={classes.penIcon}\n      >\n        <div className={classes.dateTextContainer}>\n          <ToolbarButton\n            variant={Boolean(start) ? 'h5' : 'h6'}\n            value={startDateValue}\n            selected={currentlySelectingRangeEnd === 'start'}\n            onClick={() => setCurrentlySelectingRangeEnd('start')}\n          />\n          <Typography variant=\"h5\">&nbsp;{'â€“'}&nbsp;</Typography>\n          <ToolbarButton\n            variant={Boolean(end) ? 'h5' : 'h6'}\n            value={endDateValue}\n            selected={currentlySelectingRangeEnd === 'end'}\n            onClick={() => setCurrentlySelectingRangeEnd('end')}\n          />\n        </div>\n      </PickerToolbar>\n    );\n  }\n);\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport { DAY_MARGIN } from '../constants/dimensions';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport { Day, DayProps, areDayPropsEqual } from '../views/Calendar/Day';\n\ninterface DateRangeDayProps extends DayProps {\n  isHighlighting: boolean;\n  isEndOfHighlighting: boolean;\n  isStartOfHighlighting: boolean;\n  isPreviewing: boolean;\n  isEndOfPreviewing: boolean;\n  isStartOfPreviewing: boolean;\n}\n\nconst endBorderStyle = {\n  borderTopRightRadius: '50%',\n  borderBottomRightRadius: '50%',\n};\n\nconst startBorderStyle = {\n  borderTopLeftRadius: '50%',\n  borderBottomLeftRadius: '50%',\n};\n\nconst useStyles = makeStyles(\n  theme => ({\n    rangeIntervalDay: {\n      '&:first-child $rangeIntervalDayPreview': {\n        ...startBorderStyle,\n        borderLeftColor: theme.palette.divider,\n      },\n      '&:last-child $rangeIntervalDayPreview': {\n        ...endBorderStyle,\n        borderRightColor: theme.palette.divider,\n      },\n    },\n    rangeIntervalDayHighlight: {\n      borderRadius: 0,\n      color: theme.palette.primary.contrastText,\n      backgroundColor: fade(theme.palette.primary.light, 0.6),\n      '&:first-child': startBorderStyle,\n      '&:last-child': endBorderStyle,\n    },\n    rangeIntervalDayHighlightStart: {\n      ...startBorderStyle,\n      paddingLeft: 0,\n      marginLeft: DAY_MARGIN / 2,\n    },\n    rangeIntervalDayHighlightEnd: {\n      ...endBorderStyle,\n      paddingRight: 0,\n      marginRight: DAY_MARGIN / 2,\n    },\n    day: {\n      // Required to overlap preview border\n      transform: 'scale(1.1)',\n      '& > *': {\n        transform: 'scale(0.9)',\n      },\n    },\n    dayOutsideRangeInterval: {\n      '&:hover': {\n        border: `1px solid ${theme.palette.grey[500]}`,\n      },\n    },\n    dayInsideRangeInterval: {\n      color: theme.palette.getContrastText(fade(theme.palette.primary.light, 0.6)),\n    },\n    notSelectedDate: {\n      backgroundColor: 'transparent',\n    },\n    rangeIntervalPreview: {\n      // replace default day component margin with transparent border to avoid jumping on preview\n      border: '2px solid transparent',\n    },\n    rangeIntervalDayPreview: {\n      borderRadius: 0,\n      border: `2px dashed ${theme.palette.divider}`,\n      borderLeftColor: 'transparent',\n      borderRightColor: 'transparent',\n\n      '&$rangeIntervalDayPreviewStart': {\n        borderLeftColor: theme.palette.divider,\n        ...startBorderStyle,\n      },\n      '&$rangeIntervalDayPreviewEnd': {\n        borderRightColor: theme.palette.divider,\n        ...endBorderStyle,\n      },\n    },\n    rangeIntervalDayPreviewStart: {},\n    rangeIntervalDayPreviewEnd: {},\n  }),\n  { name: 'MuiPickersDateRangeDay' }\n);\n\nexport const PureDateRangeDay = ({\n  day,\n  className,\n  selected,\n  isPreviewing,\n  isStartOfPreviewing,\n  isEndOfPreviewing,\n  isHighlighting,\n  isEndOfHighlighting,\n  isStartOfHighlighting,\n  inCurrentMonth,\n  ...other\n}: DateRangeDayProps) => {\n  const utils = useUtils();\n  const classes = useStyles();\n\n  const isEndOfMonth = utils.isSameDay(day, utils.endOfMonth(day));\n  const isStartOfMonth = utils.isSameDay(day, utils.startOfMonth(day));\n\n  const shouldRenderHighlight = isHighlighting && inCurrentMonth;\n  const shouldRenderPreview = isPreviewing && inCurrentMonth;\n\n  return (\n    <div\n      data-mui-test={shouldRenderHighlight ? 'DateRangeHighlight' : undefined}\n      className={clsx(classes.rangeIntervalDay, {\n        [classes.rangeIntervalDayHighlight]: shouldRenderHighlight,\n        [classes.rangeIntervalDayHighlightEnd]: isEndOfHighlighting || isEndOfMonth,\n        [classes.rangeIntervalDayHighlightStart]: isStartOfHighlighting || isStartOfMonth,\n      })}\n    >\n      <div\n        data-mui-test={shouldRenderPreview ? 'DateRangePreview' : undefined}\n        className={clsx(classes.rangeIntervalPreview, {\n          [classes.rangeIntervalDayPreview]: shouldRenderPreview,\n          [classes.rangeIntervalDayPreviewEnd]: isEndOfPreviewing || isEndOfMonth,\n          [classes.rangeIntervalDayPreviewStart]: isStartOfPreviewing || isStartOfMonth,\n        })}\n      >\n        <Day\n          allowKeyboardControl={false}\n          disableMargin\n          {...other}\n          day={day}\n          selected={selected}\n          inCurrentMonth={inCurrentMonth}\n          data-mui-test=\"DateRangeDay\"\n          className={clsx(\n            classes.day,\n            {\n              [classes.notSelectedDate]: !selected,\n              [classes.dayOutsideRangeInterval]: !isHighlighting,\n              [classes.dayInsideRangeInterval]: !selected && isHighlighting,\n            },\n            className\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nPureDateRangeDay.displayName = 'DateRangeDay';\n\nexport const DateRangeDay = React.memo(PureDateRangeDay, (prevProps, nextProps) => {\n  return (\n    prevProps.isHighlighting === nextProps.isHighlighting &&\n    prevProps.isEndOfHighlighting === nextProps.isEndOfHighlighting &&\n    prevProps.isStartOfHighlighting === nextProps.isStartOfHighlighting &&\n    prevProps.isPreviewing === nextProps.isPreviewing &&\n    prevProps.isEndOfPreviewing === nextProps.isEndOfPreviewing &&\n    prevProps.isStartOfPreviewing === nextProps.isStartOfPreviewing &&\n    areDayPropsEqual(prevProps, nextProps)\n  );\n});\n","import * as React from 'react';\nimport CalendarHeader from '../views/Calendar/CalendarHeader';\nimport { DateRange } from './RangeTypes';\nimport { DateRangeDay } from './DateRangePickerDay';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { Calendar, CalendarProps } from '../views/Calendar/Calendar';\nimport { ExportedArrowSwitcherProps } from '../_shared/ArrowSwitcher';\nimport { defaultMinDate, defaultMaxDate } from '../constants/prop-types';\nimport {\n  isWithinRange,\n  isStartOfRange,\n  isEndOfRange,\n  DateValidationProps,\n} from '../_helpers/date-utils';\n\nexport interface ExportedMobileDateRangeCalendarProps {}\n\ninterface DesktopDateRangeCalendarProps\n  extends ExportedMobileDateRangeCalendarProps,\n    CalendarProps,\n    DateValidationProps,\n    ExportedArrowSwitcherProps {\n  date: DateRange;\n  changeMonth: (date: MaterialUiPickersDate) => void;\n}\n\nconst onlyDateView = ['date'] as ['date'];\n\nexport const DateRangePickerViewMobile: React.FC<DesktopDateRangeCalendarProps> = ({\n  date,\n  changeMonth,\n  leftArrowButtonProps,\n  leftArrowButtonText,\n  leftArrowIcon,\n  rightArrowButtonProps,\n  rightArrowButtonText,\n  rightArrowIcon,\n  onChange,\n  minDate: __minDate,\n  maxDate: __maxDate,\n  ...other\n}) => {\n  const utils = useUtils();\n  const minDate = __minDate || utils.date(defaultMinDate);\n  const maxDate = __maxDate || utils.date(defaultMaxDate);\n\n  return (\n    <>\n      <CalendarHeader\n        view=\"date\"\n        views={onlyDateView}\n        changeView={() => ({})}\n        onMonthChange={changeMonth}\n        leftArrowButtonProps={leftArrowButtonProps}\n        leftArrowButtonText={leftArrowButtonText}\n        leftArrowIcon={leftArrowIcon}\n        rightArrowButtonProps={rightArrowButtonProps}\n        rightArrowButtonText={rightArrowButtonText}\n        rightArrowIcon={rightArrowIcon}\n        minDate={minDate}\n        maxDate={maxDate}\n        {...other}\n      />\n\n      <Calendar\n        {...other}\n        date={date}\n        onChange={onChange}\n        renderDay={(day, _, DayProps) => (\n          <DateRangeDay\n            isPreviewing={false}\n            isStartOfPreviewing={false}\n            isEndOfPreviewing={false}\n            isHighlighting={isWithinRange(utils, day, date)}\n            isStartOfHighlighting={isStartOfRange(utils, day, date)}\n            isEndOfHighlighting={isEndOfRange(utils, day, date)}\n            {...DayProps}\n          />\n        )}\n      />\n    </>\n  );\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { RangeInput, DateRange } from './RangeTypes';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { CurrentlySelectingRangeEndProps } from './RangeTypes';\nimport { useMaskedInput } from '../_shared/hooks/useMaskedInput';\nimport { DateRangeValidationError } from '../_helpers/date-utils';\nimport { WrapperVariantContext } from '../wrappers/WrapperVariantContext';\nimport { mergeRefs, executeInTheNextEventLoopTick } from '../_helpers/utils';\nimport { DateInputProps, MuiTextFieldProps } from '../_shared/PureDateInput';\n\nexport const useStyles = makeStyles(\n  theme => ({\n    rangeInputsContainer: {\n      display: 'flex',\n      alignItems: 'baseline',\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column',\n        alignItems: 'center',\n      },\n    },\n    toLabelDelimiter: {\n      margin: '8px 0',\n      [theme.breakpoints.up('sm')]: {\n        margin: '0 16px',\n      },\n    },\n  }),\n  { name: 'MuiPickersDateRangePickerInput' }\n);\n\nexport interface ExportedDateRangePickerInputProps {\n  /**\n   * The `renderInput` prop allows you to customize the rendered input.\n   * The `startProps` and `endProps` arguments of this render prop contains props of [TextField](https://material-ui.com/api/text-field/#textfield-api),\n   * that you need to forward to the range start/end inputs respectively.\n   * Pay specific attention to the `ref` and `inputProps` keys.\n   * @example\n   * ```jsx\n   * <DateRangePicker\n   * renderInput={(startProps, endProps) => (\n       <>\n         <TextField {...startProps} />\n         <Typography> to <Typography>\n         <TextField {...endProps} />\n       </>;\n     )}\n     />\n   * ````\n   */\n  renderInput: (startProps: MuiTextFieldProps, endProps: MuiTextFieldProps) => React.ReactElement;\n}\n\nexport interface DateRangeInputProps\n  extends ExportedDateRangePickerInputProps,\n    CurrentlySelectingRangeEndProps,\n    Omit<\n      DateInputProps<RangeInput, DateRange>,\n      'validationError' | 'renderInput' | 'forwardedRef'\n    > {\n  startText: React.ReactNode;\n  endText: React.ReactNode;\n  forwardedRef?: React.Ref<HTMLDivElement>;\n  containerRef?: React.Ref<HTMLDivElement>;\n  validationError: DateRangeValidationError;\n}\n\nexport const DateRangePickerInput: React.FC<DateRangeInputProps> = ({\n  containerRef,\n  currentlySelectingRangeEnd,\n  disableOpenPicker,\n  endText,\n  forwardedRef,\n  onBlur,\n  onChange,\n  open,\n  openPicker,\n  rawValue,\n  readOnly,\n  renderInput,\n  setCurrentlySelectingRangeEnd,\n  startText,\n  TextFieldProps,\n  rawValue: [start, end],\n  validationError: [startValidationError, endValidationError],\n  ...other\n}) => {\n  const utils = useUtils();\n  const classes = useStyles();\n  const startRef = React.useRef<HTMLInputElement>(null);\n  const endRef = React.useRef<HTMLInputElement>(null);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n\n  React.useEffect(() => {\n    if (!open) {\n      return;\n    }\n\n    if (currentlySelectingRangeEnd === 'start') {\n      startRef.current?.focus();\n    } else if (currentlySelectingRangeEnd === 'end') {\n      endRef.current?.focus();\n    }\n  }, [currentlySelectingRangeEnd, open]);\n\n  // TODO: rethink this approach. We do not need to wait for calendar to be updated to rerender input (looks like freezing)\n  // TODO: so simply break 1 react's commit phase in 2 (first for input and second for calendars) by executing onChange in the next tick\n  const lazyHandleChangeCallback = React.useCallback(\n    (...args: Parameters<typeof onChange>) =>\n      executeInTheNextEventLoopTick(() => onChange(...args)),\n    [onChange]\n  );\n\n  const handleStartChange = (date: MaterialUiPickersDate, inputString?: string) => {\n    lazyHandleChangeCallback([date, utils.date(end)], inputString);\n  };\n\n  const handleEndChange = (date: MaterialUiPickersDate, inputString?: string) => {\n    lazyHandleChangeCallback([utils.date(start), date], inputString);\n  };\n\n  const openRangeStartSelection = () => {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('start');\n    }\n    if (!disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const openRangeEndSelection = () => {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('end');\n    }\n    if (!disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const openOnFocus = wrapperVariant === 'desktop';\n  const startInputProps = useMaskedInput({\n    ...other,\n    readOnly,\n    rawValue: start,\n    onChange: handleStartChange,\n    label: startText,\n    validationError: startValidationError !== null,\n    TextFieldProps: {\n      ...TextFieldProps,\n      ref: startRef,\n      variant: 'outlined',\n      focused: open && currentlySelectingRangeEnd === 'start',\n    },\n    inputProps: {\n      onClick: !openOnFocus ? openRangeStartSelection : undefined,\n      onFocus: openOnFocus ? openRangeStartSelection : undefined,\n    },\n  });\n\n  const endInputProps = useMaskedInput({\n    ...other,\n    readOnly,\n    label: endText,\n    rawValue: end,\n    onChange: handleEndChange,\n    validationError: endValidationError !== null,\n    TextFieldProps: {\n      ...TextFieldProps,\n      ref: endRef,\n      variant: 'outlined',\n      focused: open && currentlySelectingRangeEnd === 'end',\n    },\n    inputProps: {\n      onClick: !openOnFocus ? openRangeEndSelection : undefined,\n      onFocus: openOnFocus ? openRangeEndSelection : undefined,\n    },\n  });\n\n  return (\n    <div\n      onBlur={onBlur}\n      className={classes.rangeInputsContainer}\n      ref={mergeRefs([containerRef, forwardedRef])}\n    >\n      {renderInput(startInputProps, endInputProps)}\n    </div>\n  );\n};\n\nDateRangePickerInput.propTypes = {\n  acceptRegex: PropTypes.instanceOf(RegExp),\n  getOpenDialogAriaText: PropTypes.func,\n  mask: PropTypes.string,\n  OpenPickerButtonProps: PropTypes.object,\n  openPickerIcon: PropTypes.node,\n  renderInput: PropTypes.func.isRequired,\n  rifmFormatter: PropTypes.func,\n};\n","import * as React from 'react';\nimport { DateRange } from './RangeTypes';\nimport { DateRangeDay } from './DateRangePickerDay';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { calculateRangePreview } from './date-range-manager';\nimport { Calendar, CalendarProps } from '../views/Calendar/Calendar';\nimport { defaultMinDate, defaultMaxDate } from '../constants/prop-types';\nimport { ArrowSwitcher, ExportedArrowSwitcherProps } from '../_shared/ArrowSwitcher';\nimport {\n  usePreviousMonthDisabled,\n  useNextMonthDisabled,\n} from '../_shared/hooks/date-helpers-hooks';\nimport {\n  isWithinRange,\n  isStartOfRange,\n  isEndOfRange,\n  DateValidationProps,\n} from '../_helpers/date-utils';\n\nexport interface ExportedDesktopDateRangeCalendarProps {\n  /**\n   * How many calendars render on **desktop** DateRangePicker\n   * @default 2\n   */\n  calendars?: 1 | 2 | 3;\n}\n\ninterface DesktopDateRangeCalendarProps\n  extends ExportedDesktopDateRangeCalendarProps,\n    CalendarProps,\n    DateValidationProps,\n    ExportedArrowSwitcherProps {\n  date: DateRange;\n  changeMonth: (date: MaterialUiPickersDate) => void;\n  currentlySelectingRangeEnd: 'start' | 'end';\n}\n\nexport const useStyles = makeStyles(\n  theme => ({\n    dateRangeContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    rangeCalendarContainer: {\n      '&:not(:last-child)': {\n        borderRight: `2px solid ${theme.palette.divider}`,\n      },\n    },\n    calendar: {\n      minWidth: 312,\n      minHeight: 288,\n    },\n    arrowSwitcher: {\n      padding: '16px 16px 8px 16px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n    },\n  }),\n  { name: 'MuiPickersDesktopDateRangeCalendar' }\n);\n\nfunction getCalendarsArray(calendars: ExportedDesktopDateRangeCalendarProps['calendars']) {\n  switch (calendars) {\n    case 1:\n      return [0];\n    case 2:\n      return [0, 0];\n    case 3:\n      return [0, 0, 0];\n    // this will not work in IE11, but allows to support any amount of calendars\n    default:\n      return new Array(calendars).fill(0);\n  }\n}\n\nexport const DateRangePickerViewDesktop: React.FC<DesktopDateRangeCalendarProps> = ({\n  date,\n  calendars = 2,\n  changeMonth,\n  leftArrowButtonProps,\n  leftArrowButtonText,\n  leftArrowIcon,\n  rightArrowButtonProps,\n  rightArrowButtonText,\n  rightArrowIcon,\n  onChange,\n  disableFuture,\n  disablePast,\n  minDate: __minDate,\n  maxDate: __maxDate,\n  currentlySelectingRangeEnd,\n  currentMonth,\n  ...other\n}) => {\n  const utils = useUtils();\n  const classes = useStyles();\n  const minDate = __minDate || utils.date(defaultMinDate);\n  const maxDate = __maxDate || utils.date(defaultMaxDate);\n\n  const [rangePreviewDay, setRangePreviewDay] = React.useState<MaterialUiPickersDate>(null);\n\n  const isNextMonthDisabled = useNextMonthDisabled(currentMonth, { disableFuture, maxDate });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(currentMonth, { disablePast, minDate });\n\n  const previewingRange = calculateRangePreview({\n    utils,\n    range: date,\n    newDate: rangePreviewDay,\n    currentlySelectingRangeEnd,\n  });\n\n  const handleDayChange = React.useCallback(\n    (day: MaterialUiPickersDate) => {\n      setRangePreviewDay(null);\n      onChange(day);\n    },\n    [onChange]\n  );\n\n  const handlePreviewDayChange = (newPreviewRequest: MaterialUiPickersDate) => {\n    if (!isWithinRange(utils, newPreviewRequest, date)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  };\n\n  const CalendarTransitionProps = React.useMemo(\n    () => ({\n      onMouseLeave: () => setRangePreviewDay(null),\n    }),\n    []\n  );\n\n  const selectNextMonth = React.useCallback(() => {\n    changeMonth(utils.getNextMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n\n  const selectPreviousMonth = React.useCallback(() => {\n    changeMonth(utils.getPreviousMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n\n  return (\n    <div className={classes.dateRangeContainer}>\n      {getCalendarsArray(calendars).map((_, index) => {\n        const monthOnIteration = utils.setMonth(currentMonth, utils.getMonth(currentMonth) + index);\n\n        return (\n          <div key={index} className={classes.rangeCalendarContainer}>\n            <ArrowSwitcher\n              className={classes.arrowSwitcher}\n              onLeftClick={selectPreviousMonth}\n              onRightClick={selectNextMonth}\n              isLeftHidden={index !== 0}\n              isRightHidden={index !== calendars - 1}\n              isLeftDisabled={isPreviousMonthDisabled}\n              isRightDisabled={isNextMonthDisabled}\n              leftArrowButtonProps={leftArrowButtonProps}\n              leftArrowButtonText={leftArrowButtonText}\n              leftArrowIcon={leftArrowIcon}\n              rightArrowButtonProps={rightArrowButtonProps}\n              rightArrowButtonText={rightArrowButtonText}\n              rightArrowIcon={rightArrowIcon}\n              text={utils.format(monthOnIteration, 'monthAndYear')}\n            />\n\n            <Calendar\n              {...other}\n              key={index}\n              date={date}\n              className={classes.calendar}\n              onChange={handleDayChange}\n              currentMonth={monthOnIteration}\n              TransitionProps={CalendarTransitionProps}\n              renderDay={(day, _, DayProps) => (\n                <DateRangeDay\n                  isPreviewing={isWithinRange(utils, day, previewingRange)}\n                  isStartOfPreviewing={isStartOfRange(utils, day, previewingRange)}\n                  isEndOfPreviewing={isEndOfRange(utils, day, previewingRange)}\n                  isHighlighting={isWithinRange(utils, day, date)}\n                  isStartOfHighlighting={isStartOfRange(utils, day, date)}\n                  isEndOfHighlighting={isEndOfRange(utils, day, date)}\n                  onMouseEnter={() => handlePreviewDayChange(day)}\n                  {...DayProps}\n                />\n              )}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { isRangeValid } from '../_helpers/date-utils';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { BasePickerProps } from '../typings/BasePicker';\nimport { calculateRangeChange } from './date-range-manager';\nimport { useUtils, useNow } from '../_shared/hooks/useUtils';\nimport { SharedPickerProps } from '../Picker/SharedPickerProps';\nimport { DateRangePickerToolbar } from './DateRangePickerToolbar';\nimport { useParsedDate } from '../_shared/hooks/date-helpers-hooks';\nimport { useCalendarState } from '../views/Calendar/useCalendarState';\nimport { FORCE_FINISH_PICKER } from '../_shared/hooks/usePickerState';\nimport { DateRangePickerViewMobile } from './DateRangePickerViewMobile';\nimport { defaultMaxDate, defaultMinDate } from '../constants/prop-types';\nimport { WrapperVariantContext } from '../wrappers/WrapperVariantContext';\nimport { MobileKeyboardInputView } from '../views/MobileKeyboardInputView';\nimport { DateRangePickerInput, DateRangeInputProps } from './DateRangePickerInput';\nimport { RangeInput, DateRange, CurrentlySelectingRangeEndProps } from './RangeTypes';\nimport { ExportedCalendarViewProps, defaultReduceAnimations } from '../views/Calendar/CalendarView';\nimport {\n  DateRangePickerViewDesktop,\n  ExportedDesktopDateRangeCalendarProps,\n} from './DateRangePickerViewDesktop';\n\ntype BaseCalendarPropsToReuse = Omit<ExportedCalendarViewProps, 'onYearChange'>;\n\nexport interface ExportedDateRangePickerViewProps\n  extends BaseCalendarPropsToReuse,\n    ExportedDesktopDateRangeCalendarProps,\n    Omit<BasePickerProps, 'value' | 'onChange'> {\n  /**\n   * if `true` after selecting `start` date  calendar will not automatically switch to the month of `end` date\n   * @default false\n   */\n  disableAutoMonthSwitching?: boolean;\n}\n\ninterface DateRangePickerViewProps\n  extends ExportedDateRangePickerViewProps,\n    CurrentlySelectingRangeEndProps,\n    SharedPickerProps<RangeInput, DateRange, DateRangeInputProps> {\n  open: boolean;\n  startText: React.ReactNode;\n  endText: React.ReactNode;\n}\n\nexport const DateRangePickerView: React.FC<DateRangePickerViewProps> = ({\n  open,\n  calendars = 2,\n  currentlySelectingRangeEnd,\n  date,\n  disableAutoMonthSwitching = false,\n  disableFuture,\n  disableHighlightToday,\n  disablePast,\n  maxDate: unparsedMaxDate = defaultMaxDate,\n  minDate: unparsedMinDate = defaultMinDate,\n  onDateChange,\n  onMonthChange,\n  reduceAnimations = defaultReduceAnimations,\n  setCurrentlySelectingRangeEnd,\n  shouldDisableDate,\n  toggleMobileKeyboardView,\n  isMobileKeyboardViewOpen,\n  showToolbar,\n  startText,\n  endText,\n  className,\n  DateInputProps,\n  ...other\n}) => {\n  const now = useNow();\n  const utils = useUtils();\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  const minDate = useParsedDate(unparsedMinDate)!;\n  const maxDate = useParsedDate(unparsedMaxDate)!;\n\n  const [start, end] = date;\n  const {\n    changeMonth,\n    calendarState,\n    isDateDisabled,\n    onMonthSwitchingAnimationEnd,\n    changeFocusedDay,\n  } = useCalendarState({\n    date: start || end || now,\n    minDate,\n    maxDate,\n    reduceAnimations,\n    disablePast,\n    disableFuture,\n    onMonthChange,\n    shouldDisableDate,\n    disableSwitchToMonthOnDayFocus: true,\n  });\n\n  const toShowToolbar = showToolbar ?? wrapperVariant !== 'desktop';\n\n  const scrollToDayIfNeeded = (day: MaterialUiPickersDate) => {\n    if (!utils.isValid(day) || isDateDisabled(day)) {\n      return;\n    }\n\n    const displayingMonthRange = wrapperVariant === 'mobile' ? 0 : calendars - 1;\n    const currentMonthNumber = utils.getMonth(calendarState.currentMonth);\n    const requestedMonthNumber = utils.getMonth(day);\n\n    if (\n      !utils.isSameYear(calendarState.currentMonth, day) ||\n      requestedMonthNumber < currentMonthNumber ||\n      requestedMonthNumber > currentMonthNumber + displayingMonthRange\n    ) {\n      const newMonth =\n        currentlySelectingRangeEnd === 'start'\n          ? start\n          : // If need to focus end, scroll to the state when \"end\" is displaying in the last calendar\n            utils.addMonths(end, -displayingMonthRange);\n\n      changeMonth(newMonth);\n    }\n  };\n\n  React.useEffect(() => {\n    if (disableAutoMonthSwitching || !open) {\n      return;\n    }\n\n    if (\n      (currentlySelectingRangeEnd === 'start' && start === null) ||\n      (currentlySelectingRangeEnd === 'end' && end === null)\n    ) {\n      return;\n    }\n\n    scrollToDayIfNeeded(currentlySelectingRangeEnd === 'start' ? start : end);\n  }, [currentlySelectingRangeEnd, date]); // eslint-disable-line\n\n  const handleChange = React.useCallback(\n    (newDate: MaterialUiPickersDate) => {\n      const { nextSelection, newRange } = calculateRangeChange({\n        newDate,\n        utils,\n        range: date,\n        currentlySelectingRangeEnd,\n      });\n\n      setCurrentlySelectingRangeEnd(nextSelection);\n\n      const isFullRangeSelected =\n        currentlySelectingRangeEnd === 'end' && isRangeValid(utils, newRange);\n      onDateChange(newRange, wrapperVariant, isFullRangeSelected ? FORCE_FINISH_PICKER : true);\n    },\n    [\n      currentlySelectingRangeEnd,\n      date,\n      onDateChange,\n      setCurrentlySelectingRangeEnd,\n      utils,\n      wrapperVariant,\n    ]\n  );\n\n  const renderView = () => {\n    const sharedCalendarProps = {\n      date,\n      isDateDisabled,\n      changeFocusedDay,\n      onChange: handleChange,\n      reduceAnimations,\n      disableHighlightToday,\n      onMonthSwitchingAnimationEnd,\n      changeMonth,\n      currentlySelectingRangeEnd,\n      disableFuture,\n      disablePast,\n      minDate,\n      maxDate,\n      ...calendarState,\n      ...other,\n    };\n\n    switch (wrapperVariant) {\n      case 'desktop': {\n        return <DateRangePickerViewDesktop calendars={calendars} {...sharedCalendarProps} />;\n      }\n\n      default: {\n        return <DateRangePickerViewMobile {...sharedCalendarProps} />;\n      }\n    }\n  };\n\n  return (\n    <div className={className}>\n      {toShowToolbar && (\n        <DateRangePickerToolbar\n          date={date}\n          isMobileKeyboardViewOpen={isMobileKeyboardViewOpen}\n          toggleMobileKeyboardView={toggleMobileKeyboardView}\n          currentlySelectingRangeEnd={currentlySelectingRangeEnd}\n          setCurrentlySelectingRangeEnd={setCurrentlySelectingRangeEnd}\n          startText={startText}\n          endText={endText}\n        />\n      )}\n\n      {isMobileKeyboardViewOpen ? (\n        <MobileKeyboardInputView>\n          <DateRangePickerInput disableOpenPicker ignoreInvalidInputs {...DateInputProps} />\n        </MobileKeyboardInputView>\n      ) : (\n        renderView()\n      )}\n    </div>\n  );\n};\n\nDateRangePickerView.propTypes = {\n  disableAutoMonthSwitching: PropTypes.bool,\n  calendars: PropTypes.oneOf([1, 2, 3]),\n};\n","import Typography from '@material-ui/core/Typography';\nimport { styled } from '@material-ui/core/styles';\nimport { withDefaultProps } from '../_shared/withDefaultProps';\n\nexport const DateRangeDelimiter = withDefaultProps(\n  { name: 'MuiPickersDateRangeDelimiter' },\n  styled(Typography)({\n    margin: '0 16px',\n  })\n);\n\nexport type DateRangeDelimiterProps = React.ComponentProps<typeof DateRangeDelimiter>;\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { date } from '../constants/prop-types';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { MobileWrapper } from '../wrappers/MobileWrapper';\nimport { DateRangeInputProps } from './DateRangePickerInput';\nimport { withDefaultProps } from '../_shared/withDefaultProps';\nimport { useParsedDate } from '../_shared/hooks/date-helpers-hooks';\nimport { withDateAdapterProp } from '../_shared/withDateAdapterProp';\nimport { DesktopPopperWrapper } from '../wrappers/DesktopPopperWrapper';\nimport { makeWrapperComponent } from '../wrappers/makeWrapperComponent';\nimport { ResponsivePopperWrapper } from '../wrappers/ResponsiveWrapper';\nimport { defaultMinDate, defaultMaxDate } from '../constants/prop-types';\nimport { SomeWrapper, ExtendWrapper, StaticWrapper } from '../wrappers/Wrapper';\nimport { makeValidationHook, ValidationProps } from '../_shared/hooks/useValidation';\nimport { usePickerState, PickerStateValueManager } from '../_shared/hooks/usePickerState';\nimport { DateRangePickerView, ExportedDateRangePickerViewProps } from './DateRangePickerView';\nimport { DateRangePickerInput, ExportedDateRangePickerInputProps } from './DateRangePickerInput';\nimport {\n  DateRange as DateRangeType,\n  RangeInput,\n  AllSharedDateRangePickerProps,\n} from './RangeTypes';\nimport {\n  parseRangeInputValue,\n  validateDateRange,\n  DateRangeValidationError,\n} from '../_helpers/date-utils';\n\nexport interface BaseDateRangePickerProps\n  extends ExportedDateRangePickerViewProps,\n    ValidationProps<DateRangeValidationError, RangeInput>,\n    ExportedDateRangePickerInputProps {\n  /**\n   * Text for start input label and toolbar placeholder\n   * @default \"Start\"\n   */\n  startText?: React.ReactNode;\n  /**\n   * Text for end input label and toolbar placeholder\n   * @default \"end\"\n   */\n  endText?: React.ReactNode;\n}\n\nexport const useDateRangeValidation = makeValidationHook<\n  DateRangeValidationError,\n  RangeInput,\n  BaseDateRangePickerProps\n>(validateDateRange, {\n  defaultValidationError: [null, null],\n  isSameError: (a, b) => a[1] === b[1] && a[0] === b[0],\n});\n\nexport function makeRangePicker<TWrapper extends SomeWrapper>(name: string, Wrapper: TWrapper) {\n  const WrapperComponent = makeWrapperComponent<DateRangeInputProps, RangeInput, DateRange>(\n    Wrapper,\n    {\n      KeyboardDateInputComponent: DateRangePickerInput,\n      PureDateInputComponent: DateRangePickerInput,\n    }\n  );\n\n  const rangePickerValueManager: PickerStateValueManager<RangeInput, DateRange> = {\n    emptyValue: [null, null],\n    parseInput: parseRangeInputValue,\n    areValuesEqual: (utils, a, b) => utils.isEqual(a[0], b[0]) && utils.isEqual(a[1], b[1]),\n  };\n\n  function RangePickerWithStateAndWrapper({\n    calendars,\n    value,\n    onChange,\n    mask = '__/__/____',\n    startText = 'Start',\n    endText = 'End',\n    inputFormat: passedInputFormat,\n    minDate: __minDate = defaultMinDate,\n    maxDate: __maxDate = defaultMaxDate,\n    ...other\n  }: BaseDateRangePickerProps & AllSharedDateRangePickerProps & ExtendWrapper<TWrapper>) {\n    const utils = useUtils();\n    const minDate = useParsedDate(__minDate);\n    const maxDate = useParsedDate(__maxDate);\n    const [currentlySelectingRangeEnd, setCurrentlySelectingRangeEnd] = React.useState<\n      'start' | 'end'\n    >('start');\n\n    const pickerStateProps = {\n      ...other,\n      value,\n      onChange,\n      inputFormat: passedInputFormat || utils.formats.keyboardDate,\n    };\n\n    const restProps = {\n      ...other,\n      minDate,\n      maxDate,\n    };\n\n    const { pickerProps, inputProps, wrapperProps } = usePickerState<RangeInput, DateRange>(\n      pickerStateProps,\n      rangePickerValueManager\n    );\n\n    const validationError = useDateRangeValidation(value, restProps);\n\n    const DateInputProps = {\n      ...inputProps,\n      ...restProps,\n      currentlySelectingRangeEnd,\n      setCurrentlySelectingRangeEnd,\n      startText,\n      endText,\n      mask,\n      validationError,\n    };\n\n    return (\n      <WrapperComponent wrapperProps={wrapperProps} DateInputProps={DateInputProps} {...restProps}>\n        <DateRangePickerView\n          open={wrapperProps.open}\n          DateInputProps={DateInputProps}\n          calendars={calendars}\n          currentlySelectingRangeEnd={currentlySelectingRangeEnd}\n          setCurrentlySelectingRangeEnd={setCurrentlySelectingRangeEnd}\n          startText={startText}\n          endText={endText}\n          {...pickerProps}\n          {...restProps}\n        />\n      </WrapperComponent>\n    );\n  }\n\n  RangePickerWithStateAndWrapper.propTypes = {\n    value: PropTypes.arrayOf(date).isRequired,\n    onChange: PropTypes.func.isRequired,\n    startText: PropTypes.node,\n    endText: PropTypes.node,\n  } as any;\n\n  const FinalPickerComponent = withDefaultProps(\n    { name },\n    withDateAdapterProp(RangePickerWithStateAndWrapper)\n  );\n\n  return React.forwardRef<\n    HTMLDivElement,\n    React.ComponentProps<typeof RangePickerWithStateAndWrapper>\n  >((props, ref) => <FinalPickerComponent {...(props as any)} forwardedRef={ref} />);\n}\n\n// TODO replace with new export type syntax\nexport type DateRange = DateRangeType;\n\nexport const DateRangePicker = makeRangePicker(\n  'MuiPickersDateRangePicker',\n  ResponsivePopperWrapper\n);\n\nexport type DateRangePickerProps = React.ComponentProps<typeof DateRangePicker>;\n\nexport const DesktopDateRangePicker = makeRangePicker(\n  'MuiPickersDesktopDateRangePicker',\n  DesktopPopperWrapper\n);\n\nexport type DesktopDateRangePickerProps = React.ComponentProps<typeof DesktopDateRangePicker>;\n\nexport const MobileDateRangePicker = makeRangePicker(\n  'MuiPickersMobileDateRangePicker',\n  MobileWrapper\n);\n\nexport type MobileDateRangePickerProps = React.ComponentProps<typeof MobileDateRangePicker>;\n\nexport const StaticDateRangePicker = makeRangePicker(\n  'MuiPickersStaticDateRangePicker',\n  StaticWrapper\n);\n\nexport type StaticDateRangePickerProps = React.ComponentProps<typeof StaticDateRangePicker>;\n\nexport { DateRangeDelimiter } from './DateRangeDelimiter';\n"],"names":["calculateRangeChange","utils","range","selectedDate","newDate","currentlySelectingRangeEnd","start","end","Boolean","isAfter","nextSelection","newRange","isBefore","calculateRangePreview","options","previewStart","previewEnd","muiComponentConfig","name","useStyles","makeStyles","penIcon","position","top","dateTextContainer","display","DateRangePickerToolbar","withDefaultProps","date","toolbarFormat","isMobileKeyboardViewOpen","toggleMobileKeyboardView","setCurrentlySelectingRangeEnd","startText","endText","toolbarTitle","useUtils","classes","startDateValue","formatByString","formats","shortDate","endDateValue","React.createElement","endBorderStyle","borderTopRightRadius","borderBottomRightRadius","startBorderStyle","borderTopLeftRadius","borderBottomLeftRadius","theme","rangeIntervalDay","borderLeftColor","palette","divider","borderRightColor","rangeIntervalDayHighlight","borderRadius","color","primary","contrastText","backgroundColor","fade","light","rangeIntervalDayHighlightStart","paddingLeft","marginLeft","DAY_MARGIN","rangeIntervalDayHighlightEnd","paddingRight","marginRight","day","transform","dayOutsideRangeInterval","border","grey","dayInsideRangeInterval","getContrastText","notSelectedDate","rangeIntervalPreview","rangeIntervalDayPreview","rangeIntervalDayPreviewStart","rangeIntervalDayPreviewEnd","PureDateRangeDay","className","selected","isPreviewing","isStartOfPreviewing","isEndOfPreviewing","isHighlighting","isEndOfHighlighting","isStartOfHighlighting","inCurrentMonth","other","isEndOfMonth","isSameDay","endOfMonth","isStartOfMonth","startOfMonth","shouldRenderHighlight","shouldRenderPreview","undefined","clsx","displayName","DateRangeDay","React","prevProps","nextProps","areDayPropsEqual","onlyDateView","DateRangePickerViewMobile","changeMonth","leftArrowButtonProps","leftArrowButtonText","leftArrowIcon","rightArrowButtonProps","rightArrowButtonText","rightArrowIcon","onChange","__minDate","minDate","__maxDate","maxDate","defaultMinDate","defaultMaxDate","_","DayProps","isWithinRange","isStartOfRange","isEndOfRange","rangeInputsContainer","alignItems","breakpoints","down","flexDirection","toLabelDelimiter","margin","up","DateRangePickerInput","containerRef","disableOpenPicker","forwardedRef","onBlur","open","openPicker","rawValue","readOnly","renderInput","TextFieldProps","validationError","startValidationError","endValidationError","startRef","endRef","wrapperVariant","WrapperVariantContext","current","focus","lazyHandleChangeCallback","args","executeInTheNextEventLoopTick","handleStartChange","inputString","handleEndChange","openRangeStartSelection","openRangeEndSelection","openOnFocus","startInputProps","useMaskedInput","label","ref","variant","focused","inputProps","onClick","onFocus","endInputProps","mergeRefs","propTypes","acceptRegex","PropTypes","RegExp","getOpenDialogAriaText","mask","OpenPickerButtonProps","openPickerIcon","isRequired","rifmFormatter","dateRangeContainer","rangeCalendarContainer","borderRight","calendar","minWidth","minHeight","arrowSwitcher","padding","justifyContent","getCalendarsArray","calendars","Array","fill","DateRangePickerViewDesktop","disableFuture","disablePast","currentMonth","rangePreviewDay","setRangePreviewDay","isNextMonthDisabled","useNextMonthDisabled","isPreviousMonthDisabled","usePreviousMonthDisabled","previewingRange","handleDayChange","handlePreviewDayChange","newPreviewRequest","CalendarTransitionProps","onMouseLeave","selectNextMonth","getNextMonth","selectPreviousMonth","getPreviousMonth","map","index","monthOnIteration","setMonth","getMonth","format","DateRangePickerView","disableAutoMonthSwitching","disableHighlightToday","unparsedMaxDate","unparsedMinDate","onDateChange","onMonthChange","reduceAnimations","defaultReduceAnimations","shouldDisableDate","showToolbar","DateInputProps","now","useNow","useParsedDate","useCalendarState","disableSwitchToMonthOnDayFocus","calendarState","isDateDisabled","onMonthSwitchingAnimationEnd","changeFocusedDay","toShowToolbar","scrollToDayIfNeeded","isValid","displayingMonthRange","currentMonthNumber","requestedMonthNumber","isSameYear","newMonth","addMonths","handleChange","isFullRangeSelected","isRangeValid","FORCE_FINISH_PICKER","renderView","sharedCalendarProps","DateRangeDelimiter","styled","Typography","useDateRangeValidation","makeValidationHook","validateDateRange","defaultValidationError","isSameError","a","b","makeRangePicker","Wrapper","WrapperComponent","makeWrapperComponent","KeyboardDateInputComponent","PureDateInputComponent","rangePickerValueManager","emptyValue","parseInput","parseRangeInputValue","areValuesEqual","isEqual","RangePickerWithStateAndWrapper","value","passedInputFormat","inputFormat","pickerStateProps","keyboardDate","restProps","usePickerState","pickerProps","wrapperProps","FinalPickerComponent","withDateAdapterProp","props","DateRangePicker","ResponsivePopperWrapper","DesktopDateRangePicker","DesktopPopperWrapper","MobileDateRangePicker","MobileWrapper","StaticDateRangePicker","StaticWrapper"],"mappings":"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"}