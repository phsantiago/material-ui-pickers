{"version":3,"file":"makePickerWithState-40b006ed.js","sources":["../src/_shared/PureDateInput.tsx","../src/_shared/PickerModalDialog.tsx","../src/wrappers/MobileWrapper.tsx","../src/wrappers/DesktopWrapper.tsx","../src/wrappers/DesktopPopperWrapper.tsx","../src/wrappers/ResponsiveWrapper.tsx","../src/wrappers/StaticWrapper.tsx","../src/_shared/hooks/useValidation.ts","../src/_shared/withDateAdapterProp.tsx","../src/wrappers/makeWrapperComponent.tsx","../src/Picker/makePickerWithState.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { onSpaceOrEnter } from '../_helpers/utils';\nimport { ParsableDate } from '../constants/prop-types';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { TextFieldProps } from '@material-ui/core/TextField';\nimport { IconButtonProps } from '@material-ui/core/IconButton';\nimport { useUtils, MuiPickersAdapter } from './hooks/useUtils';\nimport { InputAdornmentProps } from '@material-ui/core/InputAdornment';\nimport { getDisplayDate, getTextFieldAriaText } from '../_helpers/text-field-helper';\n\nexport type MuiTextFieldProps = TextFieldProps | Omit<TextFieldProps, 'variant'>;\n\nexport interface DateInputProps<TInputValue = ParsableDate, TDateValue = MaterialUiPickersDate> {\n  open: boolean;\n  rawValue: TInputValue;\n  inputFormat: string;\n  onChange: (date: TDateValue, keyboardInputValue?: string) => void;\n  openPicker: () => void;\n  readOnly?: boolean;\n  disabled?: boolean;\n  validationError?: boolean;\n  label?: TextFieldProps['label'];\n  InputProps?: TextFieldProps['InputProps'];\n  TextFieldProps?: Partial<MuiTextFieldProps>;\n  // lib/src/wrappers/DesktopPopperWrapper.tsx:87\n  onBlur?: () => void;\n  // ?? TODO when it will be possible to display \"empty\" date in datepicker use it instead of ignoring invalid inputs\n  ignoreInvalidInputs?: boolean;\n  /**\n   * The `renderInput` prop allows you to customize the rendered input.\n   * The `props` argument of this render prop contains props of [TextField](https://material-ui.com/api/text-field/#textfield-api) that you need to forward.\n   * Pay specific attention to the `ref` and `inputProps` keys.\n   * @example ```jsx\n   * renderInput={props => <TextField {...props} />}\n   * ````\n   */\n  renderInput: (props: MuiTextFieldProps) => React.ReactElement;\n  /**\n   * Icon displaying for open picker button.\n   * */\n  openPickerIcon?: React.ReactNode;\n  /**\n   * Custom mask. Can be used to override generate from format. (e.g. __/__/____ __:__ or __/__/____ __:__ _M)\n   */\n  mask?: string;\n  /**\n   *Regular expression to detect \"accepted\" symbols.\n   * @default /\\dap/gi\n   */\n  acceptRegex?: RegExp;\n  /**\n   * Props to pass to keyboard input adornment.\n   * @type {Partial<InputAdornmentProps>}\n   */\n  InputAdornmentProps?: Partial<InputAdornmentProps>;\n  /**\n   * Props to pass to keyboard adornment button.\n   * @type {Partial<IconButtonProps>}\n   */\n  OpenPickerButtonProps?: Partial<IconButtonProps>;\n  /**\n   * Custom formatter to be passed into Rifm component.\n   */\n  rifmFormatter?: (str: string) => string;\n  /**\n   * Do not render open picker button (renders only text field with validation).\n   * @default false\n   */\n  disableOpenPicker?: boolean;\n  /**\n   * Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format.\n   * @default false\n   */\n  disableMaskedInput?: boolean;\n  /**\n   * Get aria-label text for control that opens picker dialog. Aria-label text must include selected date.\n   * @default (value, utils) => `Choose date, selected date is ${utils.format(utils.date(value), 'fullDate')}`\n   */\n  getOpenDialogAriaText?: (value: ParsableDate, utils: MuiPickersAdapter) => string;\n}\n\nexport type ExportedDateInputProps<TInputValue, TDateValue> = Omit<\n  DateInputProps<TInputValue, TDateValue>,\n  | 'openPicker'\n  | 'inputValue'\n  | 'onChange'\n  | 'inputFormat'\n  | 'validationError'\n  | 'rawValue'\n  | 'forwardedRef'\n  | 'open'\n  | 'TextFieldProps'\n  | 'onBlur'\n>;\n\nexport interface DateInputRefs {\n  containerRef?: React.Ref<HTMLDivElement>;\n  forwardedRef?: React.Ref<HTMLInputElement>;\n}\n\nexport const PureDateInput: React.FC<DateInputProps & DateInputRefs> = ({\n  containerRef,\n  disabled,\n  forwardedRef,\n  getOpenDialogAriaText = getTextFieldAriaText,\n  inputFormat,\n  InputProps,\n  label,\n  openPicker: onOpen,\n  rawValue,\n  renderInput,\n  TextFieldProps = {},\n  validationError,\n}) => {\n  const utils = useUtils();\n  const PureDateInputProps = React.useMemo(\n    () => ({\n      ...InputProps,\n      readOnly: true,\n    }),\n    [InputProps]\n  );\n\n  const inputValue = getDisplayDate(utils, rawValue, inputFormat);\n\n  return renderInput({\n    label,\n    disabled,\n    ref: containerRef,\n    inputRef: forwardedRef,\n    error: validationError,\n    InputProps: PureDateInputProps,\n    inputProps: {\n      disabled,\n      'aria-readonly': true,\n      'aria-label': getOpenDialogAriaText(rawValue, utils),\n      value: inputValue,\n      onClick: onOpen,\n      onKeyDown: onSpaceOrEnter(onOpen),\n    },\n    ...TextFieldProps,\n  });\n};\n\nPureDateInput.propTypes = {\n  acceptRegex: PropTypes.instanceOf(RegExp),\n  getOpenDialogAriaText: PropTypes.func,\n  mask: PropTypes.string,\n  OpenPickerButtonProps: PropTypes.object,\n  openPickerIcon: PropTypes.node,\n  renderInput: PropTypes.func.isRequired,\n  rifmFormatter: PropTypes.func,\n};\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DIALOG_WIDTH, DIALOG_WIDTH_WIDER } from '../constants/dimensions';\n\nexport interface ExportedPickerModalProps {\n  /**\n   * \"OK\" button text.\n   * @default \"OK\"\n   */\n  okText?: React.ReactNode;\n  /**\n   * \"CANCEL\" Text message\n   * @default \"CANCEL\"\n   */\n  cancelText?: React.ReactNode;\n  /**\n   * \"CLEAR\" Text message\n   * @default \"CLEAR\"\n   */\n  clearText?: React.ReactNode;\n  /**\n   * \"TODAY\" Text message\n   * @default \"TODAY\"\n   */\n  todayText?: React.ReactNode;\n  /**\n   * If `true`, it shows the clear action in the picker dialog.\n   * @default false\n   */\n  clearable?: boolean;\n  /**\n   * If `true`, the today button will be displayed. **Note** that `showClearButton` has a higher priority.\n   * @default false\n   */\n  showTodayButton?: boolean;\n  showTabs?: boolean;\n  wider?: boolean;\n}\n\nexport interface PickerModalDialogProps extends ExportedPickerModalProps, DialogProps {\n  onAccept: () => void;\n  onClear: () => void;\n  onDismiss: () => void;\n  onSetToday: () => void;\n}\n\nexport const useStyles = makeStyles(\n  {\n    dialogRoot: {\n      minWidth: DIALOG_WIDTH,\n    },\n    dialogRootWider: {\n      minWidth: DIALOG_WIDTH_WIDER,\n    },\n    dialogContainer: {\n      '&:focus > $dialogRoot': {\n        outline: 'auto',\n        '@media (pointer:coarse)': {\n          outline: 0,\n        },\n      },\n    },\n    dialog: {\n      '&:first-child': {\n        padding: 0,\n      },\n    },\n    dialogAction: {\n      // requested for overrides\n    },\n    withAdditionalAction: {\n      // set justifyContent to default value to fix IE11 layout bug\n      // see https://github.com/mui-org/material-ui-pickers/pull/267\n      justifyContent: 'flex-start',\n\n      '& > *:first-child': {\n        marginRight: 'auto',\n      },\n    },\n  },\n  { name: 'MuiPickersModalDialog' }\n);\n\nexport const PickerModalDialog: React.FC<PickerModalDialogProps> = ({\n  cancelText = 'Cancel',\n  children,\n  classes: MuiDialogClasses,\n  clearable = false,\n  clearText = 'Clear',\n  okText = 'OK',\n  onAccept,\n  onClear,\n  onDismiss,\n  onSetToday,\n  showTabs,\n  showTodayButton = false,\n  todayText = 'Today',\n  wider,\n  ...other\n}) => {\n  const classes = useStyles();\n  return (\n    <Dialog\n      onClose={onDismiss}\n      classes={{\n        container: classes.dialogContainer,\n        paper: clsx(classes.dialogRoot, {\n          [classes.dialogRootWider]: wider,\n        }),\n        ...MuiDialogClasses,\n      }}\n      {...other}\n    >\n      <DialogContent children={children} className={classes.dialog} />\n\n      <DialogActions\n        className={clsx(classes.dialogAction, {\n          [classes.withAdditionalAction]: clearable || showTodayButton,\n        })}\n      >\n        {clearable && (\n          <Button data-mui-test=\"clear-action-button\" color=\"primary\" onClick={onClear}>\n            {clearText}\n          </Button>\n        )}\n\n        {showTodayButton && (\n          <Button data-mui-test=\"today-action-button\" color=\"primary\" onClick={onSetToday}>\n            {todayText}\n          </Button>\n        )}\n\n        {cancelText && (\n          <Button color=\"primary\" onClick={onDismiss}>\n            {cancelText}\n          </Button>\n        )}\n\n        {okText && (\n          <Button color=\"primary\" onClick={onAccept}>\n            {okText}\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { WrapperProps } from './Wrapper';\nimport { StaticWrapperProps } from './StaticWrapper';\nimport { PureDateInput } from '../_shared/PureDateInput';\nimport { InnerDesktopWrapperProps } from './DesktopWrapper';\nimport { WrapperVariantContext } from './WrapperVariantContext';\nimport { DialogProps as MuiDialogProps } from '@material-ui/core/Dialog';\nimport { PickerModalDialog, ExportedPickerModalProps } from '../_shared/PickerModalDialog';\n\nexport interface InnerMobileWrapperProps extends ExportedPickerModalProps {\n  /**\n   * Props to be passed directly to material-ui Dialog\n   * @type {Partial<MuiDialogProps>}\n   */\n  DialogProps?: Partial<MuiDialogProps>;\n}\n\nexport interface MobileWrapperProps\n  extends InnerMobileWrapperProps,\n    WrapperProps,\n    Partial<InnerDesktopWrapperProps & StaticWrapperProps> {}\n\nexport const MobileWrapper: React.FC<MobileWrapperProps> = ({\n  open,\n  children,\n  okText,\n  cancelText,\n  clearText,\n  todayText,\n  showTodayButton,\n  clearable,\n  DialogProps,\n  showTabs,\n  wider,\n  DateInputProps,\n  onClear,\n  onAccept,\n  onDismiss,\n  onSetToday,\n  PopoverProps,\n  displayStaticWrapperAs,\n  KeyboardDateInputComponent,\n  PureDateInputComponent = PureDateInput,\n  ...other\n}) => {\n  return (\n    <WrapperVariantContext.Provider value=\"mobile\">\n      <PureDateInputComponent {...other} {...DateInputProps} />\n\n      <PickerModalDialog\n        wider={wider}\n        showTabs={showTabs}\n        open={open}\n        onClear={onClear}\n        onAccept={onAccept}\n        onDismiss={onDismiss}\n        onSetToday={onSetToday}\n        clearText={clearText}\n        todayText={todayText}\n        okText={okText}\n        cancelText={cancelText}\n        clearable={clearable}\n        showTodayButton={showTodayButton}\n        children={children}\n        data-mui-test=\"mobile-wrapper-dialog\"\n        {...DialogProps}\n      />\n    </WrapperVariantContext.Provider>\n  );\n};\n\nMobileWrapper.propTypes = {\n  okText: PropTypes.node,\n  cancelText: PropTypes.node,\n  clearText: PropTypes.node,\n  clearable: PropTypes.bool,\n  todayText: PropTypes.node,\n  showTodayButton: PropTypes.bool,\n  DialogProps: PropTypes.object,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport Popover, { PopoverProps } from '@material-ui/core/Popover';\nimport { WrapperProps } from './Wrapper';\nimport { StaticWrapperProps } from './StaticWrapper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { InnerMobileWrapperProps } from './MobileWrapper';\nimport { WrapperVariantContext } from './WrapperVariantContext';\nimport { IS_TOUCH_DEVICE_MEDIA } from '../constants/dimensions';\nimport { KeyboardDateInput } from '../_shared/KeyboardDateInput';\nimport { InnerDesktopPopperWrapperProps } from './DesktopPopperWrapper';\n\nexport interface InnerDesktopWrapperProps {\n  /**\n   * Popover props passed to material-ui Popover.\n   */\n  PopoverProps?: Partial<PopoverProps>;\n}\n\nexport interface DesktopWrapperProps\n  extends InnerDesktopWrapperProps,\n    WrapperProps,\n    Partial<InnerMobileWrapperProps & InnerDesktopPopperWrapperProps & StaticWrapperProps> {}\n\nconst useStyles = makeStyles({\n  popover: {\n    '&:focus': {\n      outline: 'auto',\n      [IS_TOUCH_DEVICE_MEDIA]: {\n        outline: 0,\n      },\n    },\n  },\n});\n\nexport const DesktopWrapper: React.FC<DesktopWrapperProps> = ({\n  open,\n  children,\n  PopoverProps,\n  onDismiss,\n  DateInputProps,\n  KeyboardDateInputComponent = KeyboardDateInput,\n}) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const classes = useStyles();\n\n  return (\n    <WrapperVariantContext.Provider value=\"desktop\">\n      <KeyboardDateInputComponent {...DateInputProps} containerRef={ref} />\n\n      <Popover\n        role=\"dialog\"\n        open={open}\n        onClose={onDismiss}\n        anchorEl={ref.current}\n        classes={{ paper: classes.popover }}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        {...PopoverProps}\n      >\n        {children}\n      </Popover>\n    </WrapperVariantContext.Provider>\n  );\n};\n\nDesktopWrapper.propTypes = {\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func,\n  PopoverProps: PropTypes.object,\n} as any;\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport TrapFocus from '@material-ui/core/Unstable_TrapFocus';\nimport Popper, { PopperProps } from '@material-ui/core/Popper';\nimport { WrapperProps } from './Wrapper';\nimport { StaticWrapperProps } from './StaticWrapper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { InnerMobileWrapperProps } from './MobileWrapper';\nimport { InnerDesktopWrapperProps } from './DesktopWrapper';\nimport { WrapperVariantContext } from './WrapperVariantContext';\nimport { IS_TOUCH_DEVICE_MEDIA } from '../constants/dimensions';\nimport { KeyboardDateInput } from '../_shared/KeyboardDateInput';\nimport { executeInTheNextEventLoopTick } from '../_helpers/utils';\nimport { useGlobalKeyDown, keycode } from '../_shared/hooks/useKeyDown';\nimport { TransitionProps } from '@material-ui/core/transitions/transition';\n\nexport interface InnerDesktopPopperWrapperProps {\n  /**\n   * Popper props passed to material-ui [Popper](https://material-ui.com/api/popper/#popper-api).\n   */\n  PopperProps?: Partial<PopperProps>;\n  /**\n   * Custom component for [transition](https://material-ui.com/components/transitions/#transitioncomponent-prop).\n   */\n  TransitionComponent?: React.ComponentType<TransitionProps>;\n}\n\nexport interface DesktopPopperWrapperProps\n  extends InnerDesktopPopperWrapperProps,\n    WrapperProps,\n    Partial<InnerMobileWrapperProps & StaticWrapperProps & InnerDesktopWrapperProps> {}\n\nconst useStyles = makeStyles(theme => ({\n  popper: {\n    zIndex: theme.zIndex.modal,\n  },\n  paper: {\n    transformOrigin: 'top center',\n    '&:focus': {\n      outline: 'auto',\n      [IS_TOUCH_DEVICE_MEDIA]: {\n        outline: 0,\n      },\n    },\n  },\n  topTransition: {\n    transformOrigin: 'bottom center',\n  },\n}));\n\nexport const DesktopPopperWrapper: React.FC<DesktopPopperWrapperProps> = ({\n  open,\n  children,\n  PopperProps,\n  onDismiss,\n  DateInputProps,\n  TransitionComponent = Grow,\n  KeyboardDateInputComponent = KeyboardDateInput,\n}) => {\n  const classes = useStyles();\n  const inputRef = React.useRef<HTMLDivElement>(null);\n  const popperRef = React.useRef<HTMLElement>(null);\n\n  useGlobalKeyDown(open, {\n    [keycode.Esc]: onDismiss,\n  });\n\n  const handleBlur = () => {\n    executeInTheNextEventLoopTick(() => {\n      if (\n        inputRef.current?.contains(document.activeElement) ||\n        popperRef.current?.contains(document.activeElement)\n      ) {\n        return;\n      }\n\n      onDismiss();\n    });\n  };\n\n  return (\n    <WrapperVariantContext.Provider value=\"desktop\">\n      <KeyboardDateInputComponent {...DateInputProps} containerRef={inputRef} onBlur={handleBlur} />\n\n      <Popper\n        transition\n        placement=\"bottom\"\n        open={open}\n        anchorEl={inputRef.current}\n        {...PopperProps}\n        className={clsx(classes.popper, PopperProps?.className)}\n      >\n        {({ TransitionProps, placement }) => (\n          <TrapFocus\n            open={open}\n            disableAutoFocus\n            disableEnforceFocus\n            isEnabled={() => true}\n            getDoc={() => popperRef.current?.ownerDocument ?? document}\n          >\n            <TransitionComponent {...TransitionProps} timeout={350}>\n              <Paper\n                ref={popperRef}\n                onBlur={handleBlur}\n                tabIndex={-1}\n                elevation={8}\n                className={clsx(classes.paper, {\n                  [classes.topTransition]: placement === 'top',\n                })}\n              >\n                {children}\n              </Paper>\n            </TransitionComponent>\n          </TrapFocus>\n        )}\n      </Popper>\n    </WrapperVariantContext.Provider>\n  );\n};\n","import * as React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { IS_TOUCH_DEVICE_MEDIA } from '../constants/dimensions';\nimport { MobileWrapperProps, MobileWrapper } from './MobileWrapper';\nimport { DesktopWrapperProps, DesktopWrapper } from './DesktopWrapper';\nimport { DesktopPopperWrapperProps, DesktopPopperWrapper } from './DesktopPopperWrapper';\n\nexport interface ResponsiveWrapperProps\n  extends DesktopWrapperProps,\n    DesktopPopperWrapperProps,\n    MobileWrapperProps {\n  /**\n   * CSS media query when `Mobile` mode will be changed to `Desktop`.\n   *\n   * @default \"@media (pointer: fine)\"\n   * @example \"@media (min-width: 720px)\" or theme.breakpoints.up(\"sm\")\n   */\n  desktopModeMediaQuery?: string;\n}\n\nexport const makeResponsiveWrapper = (\n  DesktopWrapperComponent: React.FC<DesktopWrapperProps | DesktopPopperWrapperProps>,\n  MobileWrapperComponent: React.FC<MobileWrapperProps>\n) => {\n  const ResponsiveWrapper: React.FC<ResponsiveWrapperProps> = ({\n    desktopModeMediaQuery = IS_TOUCH_DEVICE_MEDIA,\n    okText,\n    cancelText,\n    clearText,\n    todayText,\n    showTodayButton,\n    clearable,\n    DialogProps,\n    PopoverProps,\n    PopperProps,\n    TransitionComponent,\n    displayStaticWrapperAs,\n    ...other\n  }) => {\n    const isDesktop = useMediaQuery(desktopModeMediaQuery);\n\n    return isDesktop ? (\n      <DesktopWrapperComponent\n        PopperProps={PopperProps}\n        TransitionComponent={TransitionComponent}\n        PopoverProps={PopoverProps}\n        {...other}\n      />\n    ) : (\n      <MobileWrapperComponent\n        okText={okText}\n        cancelText={cancelText}\n        clearText={clearText}\n        todayText={todayText}\n        showTodayButton={showTodayButton}\n        clearable={clearable}\n        DialogProps={DialogProps}\n        {...other}\n      />\n    );\n  };\n\n  return ResponsiveWrapper;\n};\n\nexport const ResponsiveWrapper = makeResponsiveWrapper(DesktopWrapper, MobileWrapper);\n\nexport const ResponsivePopperWrapper = makeResponsiveWrapper(DesktopPopperWrapper, MobileWrapper);\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DIALOG_WIDTH } from '../constants/dimensions';\nimport { WrapperVariantContext, IsStaticVariantContext } from './WrapperVariantContext';\n\nconst useStyles = makeStyles(\n  theme => ({\n    staticWrapperRoot: {\n      overflow: 'hidden',\n      minWidth: DIALOG_WIDTH,\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n  { name: 'MuiPickersStaticWrapper' }\n);\n\nexport interface StaticWrapperProps {\n  /**\n   * Force static wrapper inner components to be rendered in mobile or desktop mode\n   * @default \"static\"\n   */\n  displayStaticWrapperAs?: 'desktop' | 'mobile' | 'static';\n}\n\nexport const StaticWrapper: React.FC<StaticWrapperProps> = ({\n  displayStaticWrapperAs = 'static',\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <IsStaticVariantContext.Provider value={true}>\n      <WrapperVariantContext.Provider value={displayStaticWrapperAs}>\n        <div className={classes.staticWrapperRoot} children={children} />\n      </WrapperVariantContext.Provider>\n    </IsStaticVariantContext.Provider>\n  );\n};\n","import * as React from 'react';\nimport { useUtils, MuiPickersAdapter } from './useUtils';\n\nexport interface ValidationProps<TError, TDateValue> {\n  /**\n   * Callback that fired when input value or new `value` prop validation returns **new** validation error (or value is valid after error).\n   * In case of validation error detected `reason` prop return non-null value and `TextField` must be displayed in `error` state.\n   * This can be used to render appropriate form error.\n   *\n   * [Read the guide](https://next.material-ui-pickers.dev/guides/forms) about form integration and error displaying.\n   * @DateIOType\n   */\n  onError?: (reason: TError, value: TDateValue) => void;\n}\n\nexport interface ValidationHookOptions<TError> {\n  defaultValidationError?: TError;\n  isSameError?: (a: TError, b: TError) => boolean;\n}\n\nconst defaultIsSameError = (a: unknown, b: unknown) => a === b;\n\nexport function makeValidationHook<\n  TError,\n  TDateValue,\n  TProps extends ValidationProps<TError, TDateValue>\n>(\n  validateFn: (utils: MuiPickersAdapter, value: TDateValue, props: TProps) => TError,\n  { defaultValidationError, isSameError = defaultIsSameError }: ValidationHookOptions<TError> = {}\n) {\n  return (value: TDateValue, props: TProps) => {\n    const utils = useUtils();\n    const previousValidationErrorRef = React.useRef<TError>(\n      defaultValidationError || null\n    ) as React.MutableRefObject<TError>;\n\n    const validationError = validateFn(utils, value, props);\n\n    React.useEffect(() => {\n      if (props.onError && !isSameError(validationError, previousValidationErrorRef.current)) {\n        props.onError(validationError, value);\n      }\n\n      previousValidationErrorRef.current = validationError;\n    }, [previousValidationErrorRef, props, validationError, value]);\n\n    return validationError;\n  };\n}\n","import * as React from 'react';\nimport { MuiPickersAdapter } from './hooks/useUtils';\nimport { MuiPickersAdapterContext } from '../LocalizationProvider';\n\nexport interface WithDateAdapterProps {\n  /**\n   * Allows to pass configured date-io adapter directly. More info [here](https://material-ui-pickers.dev/guides/date-adapter-passing)\n   * ```jsx\n   * dateAdapter={new DateFnsAdapter({ locale: ruLocale })}\n   * ```\n   */\n  dateAdapter?: MuiPickersAdapter;\n}\n\nexport function withDateAdapterProp<T>(\n  Component: React.ComponentType<T>\n): React.FC<T & WithDateAdapterProps> {\n  return ({ dateAdapter, ...other }: T & WithDateAdapterProps) => {\n    if (dateAdapter) {\n      return (\n        <MuiPickersAdapterContext.Provider value={dateAdapter}>\n          <Component {...(other as T)} />\n        </MuiPickersAdapterContext.Provider>\n      );\n    }\n    return <Component {...(other as T)} />;\n  };\n}\n","import React from 'react';\nimport { StaticWrapperProps } from './StaticWrapper';\nimport { BasePickerProps } from '../typings/BasePicker';\nimport { DateInputProps } from '../_shared/PureDateInput';\nimport { ResponsiveWrapperProps } from './ResponsiveWrapper';\nimport { OmitInnerWrapperProps, SomeWrapper, WrapperProps, DateInputPropsLike } from './Wrapper';\n\ninterface MakePickerOptions<TInputProps> {\n  PureDateInputComponent?: React.FC<TInputProps>;\n  KeyboardDateInputComponent?: React.FC<TInputProps>;\n}\n\ninterface WithWrapperProps<TInputProps = DateInputProps> {\n  children: React.ReactNode;\n  DateInputProps: TInputProps;\n  wrapperProps: Omit<WrapperProps, 'DateInputProps'>;\n}\n\n/* Creates a component that rendering modal/popover/nothing and spreading props down to text field */\nexport function makeWrapperComponent<\n  TInputProps extends DateInputPropsLike<TInputValue, TDateValue>,\n  TInputValue,\n  TDateValue,\n  TWrapper extends SomeWrapper = any\n>(\n  Wrapper: TWrapper,\n  { KeyboardDateInputComponent, PureDateInputComponent }: MakePickerOptions<TInputProps>\n) {\n  function WrapperComponent(\n    props: Partial<BasePickerProps<TInputValue, TDateValue>> &\n      WithWrapperProps<TInputProps> &\n      Partial<OmitInnerWrapperProps<ResponsiveWrapperProps> & StaticWrapperProps>\n  ) {\n    const {\n      open,\n      value,\n      autoOk,\n      inputFormat,\n      onChange,\n      children,\n      clearable,\n      clearText,\n      DialogProps,\n      PopoverProps,\n      okText,\n      cancelText,\n      todayText,\n      DateInputProps,\n      wrapperProps,\n      wider,\n      showTabs,\n      onAccept,\n      onClose,\n      onOpen,\n      displayStaticWrapperAs,\n      ...restPropsForTextField\n    } = props;\n\n    const WrapperComponent = Wrapper as SomeWrapper;\n\n    return (\n      <WrapperComponent\n        clearable={clearable}\n        clearText={clearText}\n        DialogProps={DialogProps}\n        okText={okText}\n        todayText={todayText}\n        cancelText={cancelText}\n        DateInputProps={DateInputProps}\n        // @ts-ignore\n        KeyboardDateInputComponent={KeyboardDateInputComponent}\n        // @ts-ignore\n        PureDateInputComponent={PureDateInputComponent}\n        wider={wider}\n        showTabs={showTabs}\n        displayStaticWrapperAs={displayStaticWrapperAs}\n        {...wrapperProps}\n        {...restPropsForTextField}\n      >\n        {children}\n      </WrapperComponent>\n    );\n  }\n\n  return WrapperComponent;\n}\n","import * as React from 'react';\nimport Picker, { ToolbarComponentProps, ExportedPickerProps } from './Picker';\nimport { ParsableDate } from '../constants/prop-types';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { MuiPickersAdapter } from '../_shared/hooks/useUtils';\nimport { parsePickerInputValue } from '../_helpers/date-utils';\nimport { withDefaultProps } from '../_shared/withDefaultProps';\nimport { KeyboardDateInput } from '../_shared/KeyboardDateInput';\nimport { SomeWrapper, ExtendWrapper } from '../wrappers/Wrapper';\nimport { ResponsiveWrapper } from '../wrappers/ResponsiveWrapper';\nimport { withDateAdapterProp } from '../_shared/withDateAdapterProp';\nimport { makeWrapperComponent } from '../wrappers/makeWrapperComponent';\nimport { PureDateInput, DateInputProps } from '../_shared/PureDateInput';\nimport { AnyPickerView, AllSharedPickerProps } from './SharedPickerProps';\nimport { usePickerState, PickerStateValueManager } from '../_shared/hooks/usePickerState';\n\ntype AllAvailableForOverrideProps = ExportedPickerProps<AnyPickerView>;\n\nexport type AllPickerProps<T, TWrapper extends SomeWrapper = SomeWrapper> = T &\n  AllSharedPickerProps &\n  ExtendWrapper<TWrapper>;\n\nexport interface MakePickerOptions<T extends unknown> {\n  name: string;\n  /**\n   * Hook that running validation for the `value` and input.\n   */\n  useValidation: (value: ParsableDate, props: T) => string | null;\n  /**\n   * Intercept props to override or inject default props specifically for picker.\n   */\n  useInterceptProps: (props: AllPickerProps<T>) => AllPickerProps<T> & { inputFormat: string };\n  DefaultToolbarComponent: React.ComponentType<ToolbarComponentProps>;\n}\n\nconst valueManager: PickerStateValueManager<ParsableDate, MaterialUiPickersDate> = {\n  emptyValue: null,\n  parseInput: parsePickerInputValue,\n  areValuesEqual: (utils: MuiPickersAdapter, a: MaterialUiPickersDate, b: MaterialUiPickersDate) =>\n    utils.isEqual(a, b),\n};\n\nexport function makePickerWithStateAndWrapper<\n  T extends AllAvailableForOverrideProps,\n  TWrapper extends SomeWrapper = typeof ResponsiveWrapper\n>(\n  Wrapper: TWrapper,\n  { name, useInterceptProps, useValidation, DefaultToolbarComponent }: MakePickerOptions<T>\n) {\n  const PickerWrapper = makeWrapperComponent<DateInputProps, ParsableDate, MaterialUiPickersDate>(\n    Wrapper,\n    {\n      KeyboardDateInputComponent: KeyboardDateInput,\n      PureDateInputComponent: PureDateInput,\n    }\n  );\n\n  function PickerWithState(__props: T & AllSharedPickerProps & ExtendWrapper<TWrapper>) {\n    const allProps = useInterceptProps(__props) as AllPickerProps<T, TWrapper>;\n\n    const validationError = useValidation(allProps.value, allProps) !== null;\n    const { pickerProps, inputProps, wrapperProps } = usePickerState<\n      ParsableDate,\n      MaterialUiPickersDate\n    >(allProps, valueManager);\n\n    // Note that we are passing down all the value without spread.\n    // It saves us >1kb gzip and make any prop available automatically on any level down.\n    const { value, onChange, ...other } = allProps;\n    const AllDateInputProps = { ...inputProps, ...other, validationError };\n\n    return (\n      <PickerWrapper wrapperProps={wrapperProps} DateInputProps={AllDateInputProps} {...other}>\n        <Picker\n          {...pickerProps}\n          toolbarTitle={allProps.label || allProps.toolbarTitle}\n          ToolbarComponent={other.ToolbarComponent || DefaultToolbarComponent}\n          DateInputProps={AllDateInputProps}\n          {...other}\n        />\n      </PickerWrapper>\n    );\n  }\n\n  const FinalPickerComponent = withDefaultProps({ name }, withDateAdapterProp(PickerWithState));\n  return React.forwardRef<HTMLInputElement, React.ComponentProps<typeof FinalPickerComponent>>(\n    (props, ref) => <FinalPickerComponent {...(props as any)} forwardedRef={ref} />\n  );\n}\n"],"names":["PureDateInput","containerRef","disabled","forwardedRef","getOpenDialogAriaText","getTextFieldAriaText","inputFormat","InputProps","label","onOpen","openPicker","rawValue","renderInput","TextFieldProps","validationError","utils","useUtils","PureDateInputProps","React","readOnly","inputValue","getDisplayDate","ref","inputRef","error","inputProps","value","onClick","onKeyDown","onSpaceOrEnter","propTypes","acceptRegex","PropTypes","RegExp","mask","OpenPickerButtonProps","openPickerIcon","isRequired","rifmFormatter","useStyles","makeStyles","dialogRoot","minWidth","DIALOG_WIDTH","dialogRootWider","DIALOG_WIDTH_WIDER","dialogContainer","outline","dialog","padding","dialogAction","withAdditionalAction","justifyContent","marginRight","name","PickerModalDialog","cancelText","children","MuiDialogClasses","classes","clearable","clearText","okText","onAccept","onClear","onDismiss","onSetToday","showTabs","showTodayButton","todayText","wider","other","React.createElement","container","paper","clsx","MobileWrapper","open","DialogProps","DateInputProps","PopoverProps","displayStaticWrapperAs","KeyboardDateInputComponent","PureDateInputComponent","popover","IS_TOUCH_DEVICE_MEDIA","DesktopWrapper","KeyboardDateInput","current","vertical","horizontal","onClose","theme","popper","zIndex","modal","transformOrigin","topTransition","DesktopPopperWrapper","PopperProps","TransitionComponent","Grow","popperRef","useGlobalKeyDown","keycode","Esc","handleBlur","executeInTheNextEventLoopTick","contains","document","activeElement","className","TransitionProps","placement","ownerDocument","makeResponsiveWrapper","DesktopWrapperComponent","MobileWrapperComponent","ResponsiveWrapper","desktopModeMediaQuery","isDesktop","useMediaQuery","ResponsivePopperWrapper","staticWrapperRoot","overflow","display","flexDirection","backgroundColor","palette","background","StaticWrapper","defaultIsSameError","a","b","makeValidationHook","validateFn","defaultValidationError","isSameError","props","previousValidationErrorRef","onError","withDateAdapterProp","Component","dateAdapter","makeWrapperComponent","Wrapper","WrapperComponent","autoOk","onChange","wrapperProps","restPropsForTextField","valueManager","emptyValue","parseInput","parsePickerInputValue","areValuesEqual","isEqual","makePickerWithStateAndWrapper","useInterceptProps","useValidation","DefaultToolbarComponent","PickerWrapper","PickerWithState","__props","allProps","usePickerState","pickerProps","AllDateInputProps","toolbarTitle","ToolbarComponent","FinalPickerComponent","withDefaultProps"],"mappings":"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"}